From: Steffen Trumtrar <s.trumtrar@pengutronix.de>
Date: Thu, 16 Apr 2020 14:07:18 +0200
Subject: [PATCH] ARM: i.MX7: add support for iotmaxx gw4100

Signed-off-by: Steffen Trumtrar <s.trumtrar@pengutronix.de>
---
 arch/arm/boards/Makefile                           |   1 +
 arch/arm/boards/iotmaxx-gw4100/Makefile            |   2 +
 arch/arm/boards/iotmaxx-gw4100/board.c             |  77 ++++
 .../flash-header-iotmaxx-imx7d-gw4100.imxcfg       |   5 +
 arch/arm/boards/iotmaxx-gw4100/lowlevel.c          |  44 ++
 arch/arm/dts/Makefile                              |   1 +
 arch/arm/dts/imx7d-iotmaxx-gw4100.dts              | 173 ++++++++
 arch/arm/dts/imx7d-iotmaxx-gw4100.dtsi             | 471 +++++++++++++++++++++
 arch/arm/mach-imx/Kconfig                          |   4 +
 images/Makefile.imx                                |   5 +
 10 files changed, 783 insertions(+)
 create mode 100644 arch/arm/boards/iotmaxx-gw4100/Makefile
 create mode 100644 arch/arm/boards/iotmaxx-gw4100/board.c
 create mode 100644 arch/arm/boards/iotmaxx-gw4100/flash-header-iotmaxx-imx7d-gw4100.imxcfg
 create mode 100644 arch/arm/boards/iotmaxx-gw4100/lowlevel.c
 create mode 100644 arch/arm/dts/imx7d-iotmaxx-gw4100.dts
 create mode 100644 arch/arm/dts/imx7d-iotmaxx-gw4100.dtsi

diff --git a/arch/arm/boards/Makefile b/arch/arm/boards/Makefile
index 9fe458e0a390..349a0c53ee50 100644
--- a/arch/arm/boards/Makefile
+++ b/arch/arm/boards/Makefile
@@ -61,6 +61,7 @@ obj-$(CONFIG_MACH_GUF_VINCELL)			+= guf-vincell/
 obj-$(CONFIG_MACH_GW_VENTANA)			+= gateworks-ventana/
 obj-$(CONFIG_MACH_HABA_KNX_LITE)		+= haba-knx/
 obj-$(CONFIG_MACH_HIGHBANK)			+= highbank/
+obj-$(CONFIG_MACH_IOTMAXX_IMX7D_GW4100)		+= iotmaxx-gw4100/
 obj-$(CONFIG_MACH_IMX21ADS)			+= freescale-mx21-ads/
 obj-$(CONFIG_MACH_IMX233_OLINUXINO)		+= imx233-olinuxino/
 obj-$(CONFIG_MACH_IMX27ADS)			+= freescale-mx27-ads/
diff --git a/arch/arm/boards/iotmaxx-gw4100/Makefile b/arch/arm/boards/iotmaxx-gw4100/Makefile
new file mode 100644
index 000000000000..01c7a259e9a5
--- /dev/null
+++ b/arch/arm/boards/iotmaxx-gw4100/Makefile
@@ -0,0 +1,2 @@
+obj-y += board.o
+lwl-y += lowlevel.o
diff --git a/arch/arm/boards/iotmaxx-gw4100/board.c b/arch/arm/boards/iotmaxx-gw4100/board.c
new file mode 100644
index 000000000000..58b20bb5e45d
--- /dev/null
+++ b/arch/arm/boards/iotmaxx-gw4100/board.c
@@ -0,0 +1,77 @@
+#include <bootsource.h>
+#include <common.h>
+#include <init.h>
+#include <io.h>
+#include <linux/micrel_phy.h>
+#include <linux/phy.h>
+#include <mach/bbu.h>
+#include <mach/imx7-regs.h>
+#include <mfd/imx7-iomuxc-gpr.h>
+
+#include <phy-id-list.h>
+
+static int ksz8081_phy_fixup(struct phy_device *dev)
+{
+	/* Set 50MHz-Clock mode */
+	phy_write(dev, 0x1f, BIT(7));
+
+	return 0;
+}
+
+static int imx7d_iotmaxx_gateway_dev_init(void)
+{
+	int flag_emmc = 0;
+	int flag_sd = 0;
+
+	if (!of_machine_is_compatible("iotmaxx,imx7d-gw4100"))
+		return 0;
+
+	barebox_set_hostname("iotmaxx-gw4100");
+
+	switch (bootsource_get_instance()) {
+	case 1:
+		flag_sd = BBU_HANDLER_FLAG_DEFAULT;
+		of_device_enable_path("/chosen/environment-sd");
+		break;
+	case 2:
+		flag_emmc = BBU_HANDLER_FLAG_DEFAULT;
+		of_device_enable_path("/chosen/environment-emmc");
+		break;
+	}
+
+	imx7_bbu_internal_mmcboot_register_handler("eMMC", "/dev/mmc2",
+						   flag_emmc);
+	imx7_bbu_internal_mmcboot_register_handler("SD", "/dev/mmc1",
+						   flag_sd);
+
+	return 0;
+}
+device_initcall(imx7d_iotmaxx_gateway_dev_init);
+
+static void imx7d_iotmaxx_gateway_init_fec(void)
+{
+	void __iomem *gpr = IOMEM(MX7_IOMUXC_GPR_BASE_ADDR);
+	uint32_t gpr1;
+
+	/*
+	 * Make sure we drive ENETn_TX_CLK signal
+	 */
+	gpr1 = readl(gpr + IOMUXC_GPR1);
+	gpr1 |=  IMX7D_GPR1_ENET2_CLK_DIR_MASK;
+	gpr1 &= ~IMX7D_GPR1_ENET2_TX_CLK_SEL_MASK;
+	writel(gpr1, gpr + IOMUXC_GPR1);
+}
+
+static int imx7d_iotmaxx_gateway_coredevices_init(void)
+{
+	if (!of_machine_is_compatible("iotmaxx,imx7d-gw4100"))
+		return 0;
+
+	imx7d_iotmaxx_gateway_init_fec();
+
+	phy_register_fixup_for_uid(PHY_ID_KSZ8081, MICREL_PHY_ID_MASK,
+				   ksz8081_phy_fixup);
+
+	return 0;
+}
+coredevice_initcall(imx7d_iotmaxx_gateway_coredevices_init);
diff --git a/arch/arm/boards/iotmaxx-gw4100/flash-header-iotmaxx-imx7d-gw4100.imxcfg b/arch/arm/boards/iotmaxx-gw4100/flash-header-iotmaxx-imx7d-gw4100.imxcfg
new file mode 100644
index 000000000000..9d1d20310094
--- /dev/null
+++ b/arch/arm/boards/iotmaxx-gw4100/flash-header-iotmaxx-imx7d-gw4100.imxcfg
@@ -0,0 +1,5 @@
+soc imx7
+loadaddr 0x80000000
+dcdofs 0x400
+
+#include <mach/flash-header/imx7d-ddr-sabresd.imxcfg>
diff --git a/arch/arm/boards/iotmaxx-gw4100/lowlevel.c b/arch/arm/boards/iotmaxx-gw4100/lowlevel.c
new file mode 100644
index 000000000000..b01950e036f2
--- /dev/null
+++ b/arch/arm/boards/iotmaxx-gw4100/lowlevel.c
@@ -0,0 +1,44 @@
+// SPDX-License-Identifier: GPL-2.0+
+#include <debug_ll.h>
+#include <io.h>
+#include <common.h>
+#include <linux/sizes.h>
+#include <mach/generic.h>
+#include <asm/barebox-arm-head.h>
+#include <asm/barebox-arm.h>
+#include <mach/imx7-ccm-regs.h>
+#include <mach/iomux-mx7.h>
+#include <mach/debug_ll.h>
+#include <asm/cache.h>
+#include <mach/esdctl.h>
+
+extern char __dtb_imx7d_iotmaxx_gw4100_start[];
+
+static inline void setup_uart(void)
+{
+	void __iomem *ccm = IOMEM(MX7_CCM_BASE_ADDR);
+
+	writel(IMX7_CCM_CCGR_SETTINGn_NEEDED(0),
+	       ccm + IMX7_CCM_CCGRn_CLR(IMX7_CCM_CCGR_UART3));
+	writel(IMX7_CCM_TARGET_ROOTn_ENABLE | IMX7_UART2_CLK_ROOT__OSC_24M,
+	       ccm + IMX7_CCM_TARGET_ROOTn(IMX7_UART3_CLK_ROOT));
+	writel(IMX7_CCM_CCGR_SETTINGn_NEEDED(0),
+	       ccm + IMX7_CCM_CCGRn_SET(IMX7_CCM_CCGR_UART3));
+
+	imx7_setup_pad(MX7D_PAD_UART3_TX_DATA__UART3_DCE_TX);
+
+	imx7_uart_setup_ll();
+
+	putc_ll('>');
+}
+
+ENTRY_FUNCTION(start_imx7d_iotmaxx_gw4100, r0, r1, r2)
+{
+	imx7_cpu_lowlevel_init();
+
+	if (IS_ENABLED(CONFIG_DEBUG_LL))
+		setup_uart();
+
+	imx7d_barebox_entry(__dtb_imx7d_iotmaxx_gw4100_start +
+			    get_runtime_offset());
+}
diff --git a/arch/arm/dts/Makefile b/arch/arm/dts/Makefile
index ddfe64e83bdf..e65572b07ef1 100644
--- a/arch/arm/dts/Makefile
+++ b/arch/arm/dts/Makefile
@@ -30,6 +30,7 @@ lwl-dtb-$(CONFIG_MACH_GRINN_LITEBOARD) += imx6ul-liteboard.dtb.o
 lwl-dtb-$(CONFIG_MACH_GUF_SANTARO) += imx6q-guf-santaro.dtb.o
 lwl-dtb-$(CONFIG_MACH_GUF_VINCELL) += imx53-guf-vincell.dtb.o imx53-guf-vincell-lt.dtb.o
 lwl-dtb-$(CONFIG_MACH_GW_VENTANA) += imx6q-gw54xx.dtb.o
+lwl-dtb-$(CONFIG_MACH_IOTMAXX_IMX7D_GW4100) += imx7d-iotmaxx-gw4100.dtb.o
 lwl-dtb-$(CONFIG_MACH_KONTRON_SAMX6I) += imx6q-samx6i.dtb.o \
 					imx6dl-samx6i.dtb.o
 lwl-dtb-$(CONFIG_MACH_LENOVO_IX4_300D) += armada-xp-lenovo-ix4-300d-bb.dtb.o
diff --git a/arch/arm/dts/imx7d-iotmaxx-gw4100.dts b/arch/arm/dts/imx7d-iotmaxx-gw4100.dts
new file mode 100644
index 000000000000..4179d6106dcd
--- /dev/null
+++ b/arch/arm/dts/imx7d-iotmaxx-gw4100.dts
@@ -0,0 +1,173 @@
+/dts-v1/;
+
+#include <arm/imx7d.dtsi>
+#include "imx7d-iotmaxx-gw4100.dtsi"
+
+/ {
+	aliases {
+		state = &state;
+	};
+
+	chosen {
+		stdout-path = &uart3;
+
+		environment-emmc {
+			compatible = "barebox,environment";
+			device-path = &bareboxenvemmc;
+			status = "disabled";
+		};
+
+		environment-sd {
+			compatible = "barebox,environment";
+			device-path = &bareboxenvsd;
+			status = "disabled";
+		};
+	};
+
+	state: state {
+		magic = <0x496f546d>;
+		compatible = "barebox,state";
+		backend-type = "raw";
+		backend = <&state_emmc>;
+		backend-stridesize = <1024>;
+		#address-cells = <1>;
+		#size-cells = <1>;
+
+		bootstate {
+			#address-cells = <1>;
+			#size-cells = <1>;
+
+			system0 {
+				#address-cells = <1>;
+				#size-cells = <1>;
+
+				remaining_attempts {
+					reg = <0x0 0x4>;
+					type = "uint32";
+					default = <3>;
+				};
+				priority {
+					reg = <0x4 0x4>;
+					type = "uint32";
+					default = <21>;
+				};
+			};
+
+			system1 {
+				#address-cells = <1>;
+				#size-cells = <1>;
+
+				remaining_attempts {
+					reg = <0x10 0x4>;
+					type = "uint32";
+					default = <3>;
+				};
+				priority {
+					reg = <0x14 0x4>;
+					type = "uint32";
+					default = <20>;
+				};
+			};
+
+			last_chosen {
+				reg = <0x20 0x4>;
+				type = "uint32";
+			};
+		};
+	};
+};
+
+&fec2 {
+	pinctrl-names = "default";
+	pinctrl-0 = <&pinctrl_enet2>,
+		    <&pinctrl_mdio>,
+		    <&pinctrl_rmii_phy_irq>;
+	assigned-clocks = <&clks IMX7D_ENET2_REF_ROOT_SRC>;
+	assigned-clock-parents = <&clks IMX7D_PLL_ENET_MAIN_50M_CLK>;
+	assigned-clock-rates = <50000000>;
+	phy-handle = <&ethphy1>;
+	phy-mode = "rmii";
+	phy-reset-gpios = <&gpio2 27 GPIO_ACTIVE_LOW>;
+	status = "okay";
+
+	mdio {
+		#address-cells = <1>;
+		#size-cells = <0>;
+
+		ethphy1: ethernet-phy@1 {
+			compatible = "ethernet-phy-ieee802.3-c22";
+			interrupt-parent = <&gpio2>;
+			interrupts = <25 IRQ_TYPE_LEVEL_LOW>;
+			reg = <1>;
+		};
+	};
+};
+
+&iomuxc {
+	pinctrl_mdio: mdiogrp {
+		fsl,pins = <
+		MX7D_PAD_UART2_RX_DATA__ENET2_MDIO		0x3	/* ENET_MDIO */
+		MX7D_PAD_UART2_TX_DATA__ENET2_MDC		0x3  	/* ENET_MDC */
+		>;
+	};
+	pinctrl_enet2: enet1grp {
+		fsl,pins = <
+		MX7D_PAD_EPDC_SDCE0__ENET2_RGMII_RX_CTL		0x5	/* ENET2_CRS_DV */
+		MX7D_PAD_EPDC_SDCE1__ENET2_RX_ER		0x5	/* ENET2_RXER */
+		MX7D_PAD_EPDC_SDCE2__ENET2_RGMII_TD0		0x5	/* ENET2_TXD0 */
+		MX7D_PAD_EPDC_SDCE3__ENET2_RGMII_TD1		0x5	/* ENET2_TXD1 */
+		MX7D_PAD_EPDC_SDCLK__ENET2_RGMII_RD0		0x5	/* ENET2_RXD0 */
+		MX7D_PAD_EPDC_SDLE__ENET2_RGMII_RD1		0x5	/* ENET2_RXD1 */
+		MX7D_PAD_EPDC_GDCLK__GPIO2_IO24			0x5	/* ENET2_B-CAST_OFF */
+		MX7D_PAD_EPDC_GDRL__ENET2_RGMII_TX_CTL		0x5	/* ENET2_TXEN */
+		MX7D_PAD_EPDC_GDSP__GPIO2_IO27			0x59	/* !ENET2_RST */
+		MX7D_PAD_EPDC_BDR0__CCM_ENET_REF_CLK2		0x40000001	/* ENET2_TX_CLK */
+		>;
+	};
+	pinctrl_rmii_phy_irq: phygrp {
+		fsl,pins = <
+		MX7D_PAD_EPDC_GDOE__GPIO2_IO25			0x59	/* !ENET2_INT */
+		>;
+	};
+};
+
+&usdhc2 {
+	partitions {
+		compatible = "fixed-partitions";
+		#address-cells = <1>;
+		#size-cells = <1>;
+
+		barebox@0 {
+			label = "barebox";
+			reg = <0x0 0xe0000>;
+		};
+
+		bareboxenvsd: bareboxenv@e0000 {
+			label = "bareboxenv";
+			reg = <0xe0000 0x20000>;
+		};
+
+		state_sd: state@100000 {
+			label = "state";
+			reg = <0x100000 0x20000>;
+		};
+	};
+};
+
+&usdhc3 {
+	partitions {
+		compatible = "fixed-partitions";
+		#address-cells = <1>;
+		#size-cells = <1>;
+
+		bareboxenvemmc: bareboxenv@0 {
+			label = "bareboxenv";
+			reg = <0x0 0x20000>;
+		};
+
+		state_emmc: state@20000 {
+			label = "state";
+			reg = <0x20000 0x20000>;
+		};
+	};
+};
diff --git a/arch/arm/dts/imx7d-iotmaxx-gw4100.dtsi b/arch/arm/dts/imx7d-iotmaxx-gw4100.dtsi
new file mode 100644
index 000000000000..7fe7dd05df14
--- /dev/null
+++ b/arch/arm/dts/imx7d-iotmaxx-gw4100.dtsi
@@ -0,0 +1,471 @@
+// FIXME: delete when define is fixed in upstream
+#define MX7D_PAD_UART2_RX_DATA__ENET2_MDIO                        0x0130 0x03A0 0x0574 0x6 0x1
+
+/ {
+	model = "IoTMAXX i.MX7D GW4100 Gateway";
+	compatible = "iotmaxx,imx7d-gw4100", "fsl,imx7d";
+
+	chosen {
+		stdout-path = &uart3;
+	};
+
+	memory {
+		device_type = "memory";
+		reg = <0x80000000 0x40000000>;
+	};
+
+	gpio-leds {
+		compatible = "gpio-leds";
+		pinctrl-0 = <&pinctrl_leds_usr>;
+		pinctrl-names = "default";
+
+		usr1 {
+			label = "iotmaxx:green:usr1";
+			gpios = <&gpio4 15 GPIO_ACTIVE_HIGH>;
+			linux,default-trigger = "heartbeat";
+		};
+
+		usr2 {
+			label = "iotmaxx:green:usr2";
+			gpios = <&gpio4 14 GPIO_ACTIVE_HIGH>;
+		};
+	};
+
+	reg_5v_periph: regulator-5v-periph {
+		compatible = "regulator-fixed";
+		regulator-name = "5v_periph";
+		regulator-min-microvolt = <5000000>;
+		regulator-max-microvolt = <5000000>;
+		gpio = <&gpio2 2 GPIO_ACTIVE_HIGH>;
+		enable-active-high;
+		regulator-always-on;
+	};
+
+	reg_usb_gsm_vbus: regulator-usb-gsm-vbus {
+		compatible = "regulator-fixed";
+		regulator-name = "usb_gsm_vbus";
+		regulator-min-microvolt = <5000000>;
+		regulator-max-microvolt = <5000000>;
+		gpio = <&gpio3 4 GPIO_ACTIVE_HIGH>;
+		enable-active-high;
+		regulator-always-on;
+	};
+
+	reg_gsm_pwr_en_3v3: regulator-gsm-pwr-en-3v3 {
+		compatible = "regulator-fixed";
+		regulator-name = "gsm_pwr_en_3v3";
+		pinctrl-names = "default";
+		regulator-min-microvolt = <3300000>;
+		regulator-max-microvolt = <3300000>;
+		gpio = <&gpio2 15 GPIO_ACTIVE_HIGH>;
+		enable-active-high;
+		regulator-always-on;
+	};
+
+	reg_usb_gsm_reset: regulator-usb-gsm-reset {
+		compatible = "regulator-fixed";
+		regulator-name = "usb_gsm_reset";
+		regulator-min-microvolt = <3300000>;
+		regulator-max-microvolt = <3300000>;
+		gpio = <&gpio4 17 GPIO_ACTIVE_LOW>;
+		regulator-always-on;
+	};
+
+	reg_usb_gsm_power_on_off: regulator-usb-gsm-on-off {
+		compatible = "regulator-fixed";
+		regulator-name = "usb_gsm_power_on_off";
+		pinctrl-names = "default";
+		pinctrl-0 = <&pinctrl_usb_gsm_pwr>;
+		regulator-min-microvolt = <3300000>;
+		regulator-max-microvolt = <3300000>;
+		gpio = <&gpio4 18 GPIO_ACTIVE_HIGH>;
+		enable-active-high;
+		regulator-always-on;
+	};
+
+	reg_usb_otg2_vbus: regulator-usb-otg2-vbus {
+		compatible = "regulator-fixed";
+		regulator-name = "usb_otg2_vbus";
+		pinctrl-names = "default";
+		pinctrl-0 = <&pinctrl_usb_otg2_vbus_reg>;
+		regulator-min-microvolt = <5000000>;
+		regulator-max-microvolt = <5000000>;
+		gpio = <&gpio1 7 GPIO_ACTIVE_HIGH>;
+		enable-active-high;
+	};
+};
+
+&fec1 {
+	status = "disabled";
+};
+
+&gpio1 {
+	pinctrl-names = "default";
+	pinctrl-0 = <&pinctrl_gpio1>;
+
+	gpio-line-names = "gpio1_highside",
+	"gpio1_lowside",
+	"gpio1_pullup",
+	"n_gpio1_in",
+	"gpio2_highside",
+	"gpio2_lowside",
+	"n_usb_ext_oc",
+	"usb_ext_pwr", "", "",
+	"", "",	"", "", "",
+	"", "", "", "", "",
+	"", "", "", "", "",
+	"", "", "", "", "",
+	"", "";
+};
+
+&gpio2 {
+	pinctrl-names = "default";
+	pinctrl-0 = <&pinctrl_gpio2>;
+	status = "okay";
+
+	gpio-line-names = "",
+	"", "5v_periph_en", "", "", "",
+	"", "", "", "", "",
+	"", "", "", "", "gsm_pwr_en_3v3",
+	"", "", "n_usbhub_int", "usbhub_connect", "",
+	"", "", "", "", "",
+	"", "", "", "", "n_usbhub_rst",
+	"";
+};
+
+&gpio3 {
+	pinctrl-names = "default";
+	pinctrl-0 = <&pinctrl_gpio3>;
+	status = "okay";
+
+	gpio-line-names = "",
+	"", "", "", "vusb_gsm_en", "",
+	"", "", "", "", "",
+	"", "", "", "", "",
+	"", "", "", "", "",
+	"", "", "", "", "sim_enable",
+	"", "", "", "", "",
+	"";
+};
+
+&gpio4 {
+	pinctrl-names = "default";
+	pinctrl-0 = <&pinctrl_gpio4>;
+	status = "okay";
+
+	gpio-line-names = "",
+	"", "", "", "",	"",
+	"", "", "", "", "",
+	"", "n_can_term_en", "", "led_usr2", "led_usr1",
+	"sim_sel", "gsm_rst", "gsm_power_on_off", "n_gsm_pwr_ind", "",
+	"", "", "", "", "",
+	"", "", "", "", "",
+	"";
+};
+
+&i2c1 {
+	pinctrl-names = "default";
+	pinctrl-0 = <&pinctrl_i2c1>;
+	status = "okay";
+
+	1wire@18 {
+		compatible = "ds2482";
+		reg = <0x18>;
+	};
+};
+
+/* CTRL_I2C */
+&i2c3 {
+	pinctrl-names = "default";
+	pinctrl-0 = <&pinctrl_i2c3>;
+	status = "okay";
+
+	/* pmic@xx { */
+	/* }; */
+
+	usb_hub: usb-hub@8 {
+		compatible = "smsc,usb3503";
+		reg = <0x8>;
+		pinctrl-names = "default";
+		pinctrl-0 = <&pinctrl_usbhub>;
+		initial-mode = <1>;	/* HUB mode */
+		reset-gpios = <&gpio2 30 GPIO_ACTIVE_LOW>;
+		intn-gpios = <&gpio2 18 GPIO_ACTIVE_LOW>;
+		connect-gpios = <&gpio2 19 GPIO_ACTIVE_HIGH>;
+		clocks = <&clks IMX7D_OSC_24M_CLK>;
+		clock-names = "refclk";
+	};
+
+	tpm: tpm@20 {
+		compatible = "infineon,slb9645tt";
+		reg = <0x20>;
+	};
+
+	eeprom: eeprom@50 {
+		compatible = "atmel,24c01";
+		pagesize = <8>;
+		reg = <0x50>;
+	};
+
+	pcf85363: pcf85363@51 {
+		compatible = "nxp,pcf85363";
+		reg = <0x51>;
+	};
+};
+
+/* EXP_I2C */
+&i2c4 {
+	pinctrl-names = "default";
+	pinctrl-0 = <&pinctrl_i2c4>;
+	status = "okay";
+};
+
+&iomuxc {
+	pinctrl_mdio: mdiogrp {
+		fsl,pins = <
+		MX7D_PAD_UART2_RX_DATA__ENET2_MDIO		0x3	/* ENET_MDIO */
+		MX7D_PAD_UART2_TX_DATA__ENET2_MDC		0x3  	/* ENET_MDC */
+		>;
+	};
+	pinctrl_enet2: enet1grp {
+		fsl,pins = <
+		MX7D_PAD_EPDC_SDCE0__ENET2_RGMII_RX_CTL		0x5	/* ENET2_CRS_DV */
+		MX7D_PAD_EPDC_SDCE1__ENET2_RX_ER		0x5	/* ENET2_RXER */
+		MX7D_PAD_EPDC_SDCE2__ENET2_RGMII_TD0		0x5	/* ENET2_TXD0 */
+		MX7D_PAD_EPDC_SDCE3__ENET2_RGMII_TD1		0x5	/* ENET2_TXD1 */
+		MX7D_PAD_EPDC_SDCLK__ENET2_RGMII_RD0		0x5	/* ENET2_RXD0 */
+		MX7D_PAD_EPDC_SDLE__ENET2_RGMII_RD1		0x5	/* ENET2_RXD1 */
+		MX7D_PAD_EPDC_GDCLK__GPIO2_IO24			0x5	/* ENET2_B-CAST_OFF */
+		MX7D_PAD_EPDC_GDRL__ENET2_RGMII_TX_CTL		0x5	/* ENET2_TXEN */
+		MX7D_PAD_EPDC_GDSP__GPIO2_IO27			0x59	/* !ENET2_RST */
+		MX7D_PAD_EPDC_BDR0__CCM_ENET_REF_CLK2		0x40000001	/* ENET2_TX_CLK */
+		>;
+	};
+	pinctrl_rmii_phy_irq: phygrp {
+		fsl,pins = <
+		MX7D_PAD_EPDC_GDOE__GPIO2_IO25			0x59	/* !ENET2_INT */
+		>;
+	};
+
+	pinctrl_flexcan1: flexcan1grp {
+		fsl,pins = <
+		MX7D_PAD_GPIO1_IO12__FLEXCAN1_RX		0x5a
+		MX7D_PAD_GPIO1_IO13__FLEXCAN1_TX		0x52
+		>;
+	};
+
+	pinctrl_gpio2: gpio2grp {
+		fsl,pins = <
+		MX7D_PAD_EPDC_DATA02__GPIO2_IO2			0x14	/* 5V_PERIPH_EN */
+		MX7D_PAD_EPDC_DATA15__GPIO2_IO15		0x40000059	/* GSM_PWR_EN_3V3 */
+		>;
+	};
+
+	pinctrl_gpio3: gpio3grp {
+		fsl,pins = <
+		MX7D_PAD_LCD_RESET__GPIO3_IO4			0x79	/* VUSB_GSM_EN */
+		MX7D_PAD_LCD_DATA20__GPIO3_IO25			0x14	/* SIM_ENABLE */
+		>;
+	};
+
+	pinctrl_gpio4: gpio4grp {
+		fsl,pins = <
+		MX7D_PAD_ECSPI1_MOSI__GPIO4_IO17		0x59	/* GSM_RST */
+		MX7D_PAD_ECSPI1_SS0__GPIO4_IO19			0x40000059	/* !GSM_PWR_IND */
+		MX7D_PAD_ECSPI1_SCLK__GPIO4_IO16		0x59
+		MX7D_PAD_I2C3_SCL__GPIO4_IO12			0x59	/* !CAN_TERM_EN */
+		>;
+	};
+
+	pinctrl_i2c1: i2c1grp {
+		fsl,pins = <
+		MX7D_PAD_UART1_RX_DATA__I2C1_SCL		0x40000078
+		MX7D_PAD_UART1_TX_DATA__I2C1_SDA		0x40000078
+		>;
+	};
+
+	pinctrl_i2c3: i2c3grp {
+		fsl,pins = <
+		MX7D_PAD_ENET1_RGMII_RD1__I2C3_SDA		0x40000078
+		MX7D_PAD_ENET1_RGMII_RD0__I2C3_SCL		0x40000078
+		>;
+	};
+
+	pinctrl_i2c4: i2c4grp {
+		fsl,pins = <
+		MX7D_PAD_ENET1_RGMII_TD3__I2C4_SDA		0x40000078
+		MX7D_PAD_ENET1_RGMII_TD2__I2C4_SCL		0x40000078
+		>;
+	};
+
+	pinctrl_leds_usr: ledsusrgrp {
+		fsl,pins = <
+		MX7D_PAD_I2C4_SDA__GPIO4_IO15			0x59	/* LED USR1 */
+		MX7D_PAD_I2C4_SCL__GPIO4_IO14			0x59	/* LED USR2 */
+		>;
+	};
+
+	pinctrl_uart3: uart3grp {
+		fsl,pins = <
+		MX7D_PAD_UART3_RX_DATA__UART3_DCE_RX		0x79
+		MX7D_PAD_UART3_TX_DATA__UART3_DCE_TX		0x79
+		MX7D_PAD_UART3_RTS_B__UART3_DCE_RTS		0x79
+		MX7D_PAD_UART3_CTS_B__UART3_DCE_CTS		0x79
+		>;
+	};
+
+	pinctrl_uart4: uart4grp {
+		fsl,pins = <
+		MX7D_PAD_I2C1_SCL__GPIO4_IO8			0x79
+		MX7D_PAD_I2C2_SCL__UART4_DCE_RX			0x79
+		MX7D_PAD_I2C2_SDA__UART4_DCE_TX			0x79
+		>;
+	};
+
+	pinctrl_usb_gsm_pwr: usbgsmpwrgrp {
+		fsl,pins = <
+		MX7D_PAD_ECSPI1_MISO__GPIO4_IO18		0x40000059	/* GSM_POWER_ON_OFF */
+		>;
+	};
+
+	pinctrl_usbhub: usbhubgrp {
+		fsl,pins = <
+		MX7D_PAD_EPDC_PWR_COM__GPIO2_IO30		0x59	/* !USBHUB_RST */
+		MX7D_PAD_EPDC_SDOE__GPIO2_IO18			0x59	/* !USBHUB_INT */
+		MX7D_PAD_EPDC_SDSHR__GPIO2_IO19			0x59	/* USBHUB_CONNECT */
+		>;
+	};
+
+	pinctrl_usdhc2: usdhc2grp {
+		fsl,pins = <
+		MX7D_PAD_SD2_CMD__SD2_CMD			0x59
+		MX7D_PAD_SD2_CLK__SD2_CLK			0x19
+		MX7D_PAD_SD2_DATA0__SD2_DATA0			0x59
+		MX7D_PAD_SD2_DATA1__SD2_DATA1			0x59
+		MX7D_PAD_SD2_DATA2__SD2_DATA2			0x59
+		MX7D_PAD_SD2_DATA3__SD2_DATA3			0x59
+		MX7D_PAD_SD2_CD_B__SD2_CD_B			0x59
+		>;
+	};
+
+	pinctrl_usdhc3: usdhc3grp {
+		fsl,pins = <
+		MX7D_PAD_SD3_CMD__SD3_CMD			0x59
+		MX7D_PAD_SD3_CLK__SD3_CLK			0x19
+		MX7D_PAD_SD3_DATA0__SD3_DATA0			0x59
+		MX7D_PAD_SD3_DATA1__SD3_DATA1			0x59
+		MX7D_PAD_SD3_DATA2__SD3_DATA2			0x59
+		MX7D_PAD_SD3_DATA3__SD3_DATA3			0x59
+		MX7D_PAD_SD3_DATA4__SD3_DATA4			0x59
+		MX7D_PAD_SD3_DATA5__SD3_DATA5			0x59
+		MX7D_PAD_SD3_DATA6__SD3_DATA6			0x59
+		MX7D_PAD_SD3_DATA7__SD3_DATA7			0x59
+		MX7D_PAD_SD3_STROBE__SD3_STROBE			0x19
+		>;
+	};
+
+	pinctrl_usdhc3_100mhz: usdhc3grp_100mhz {
+		fsl,pins = <
+		MX7D_PAD_SD3_CMD__SD3_CMD			0x5a
+		MX7D_PAD_SD3_CLK__SD3_CLK			0x1a
+		MX7D_PAD_SD3_DATA0__SD3_DATA0			0x5a
+		MX7D_PAD_SD3_DATA1__SD3_DATA1			0x5a
+		MX7D_PAD_SD3_DATA2__SD3_DATA2			0x5a
+		MX7D_PAD_SD3_DATA3__SD3_DATA3			0x5a
+		MX7D_PAD_SD3_DATA4__SD3_DATA4			0x5a
+		MX7D_PAD_SD3_DATA5__SD3_DATA5			0x5a
+		MX7D_PAD_SD3_DATA6__SD3_DATA6			0x5a
+		MX7D_PAD_SD3_DATA7__SD3_DATA7			0x5a
+		MX7D_PAD_SD3_STROBE__SD3_STROBE			0x1a
+		>;
+	};
+
+	pinctrl_usdhc3_200mhz: usdhc3grp_200mhz {
+		fsl,pins = <
+		MX7D_PAD_SD3_CMD__SD3_CMD			0x5b
+		MX7D_PAD_SD3_CLK__SD3_CLK			0x1b
+		MX7D_PAD_SD3_DATA0__SD3_DATA0			0x5b
+		MX7D_PAD_SD3_DATA1__SD3_DATA1			0x5b
+		MX7D_PAD_SD3_DATA2__SD3_DATA2			0x5b
+		MX7D_PAD_SD3_DATA3__SD3_DATA3			0x5b
+		MX7D_PAD_SD3_DATA4__SD3_DATA4			0x5b
+		MX7D_PAD_SD3_DATA5__SD3_DATA5			0x5b
+		MX7D_PAD_SD3_DATA6__SD3_DATA6			0x5b
+		MX7D_PAD_SD3_DATA7__SD3_DATA7			0x5b
+		MX7D_PAD_SD3_STROBE__SD3_STROBE			0x1b
+		>;
+	};
+};
+
+&iomuxc_lpsr {
+	pinctrl_gpio1: gpio1grp {
+		fsl,pins = <
+		MX7D_PAD_LPSR_GPIO1_IO00__GPIO1_IO0		0x00	/* GPIO1_HIGHSIDE */
+		MX7D_PAD_LPSR_GPIO1_IO01__GPIO1_IO1		0x00	/* GPIO1_LOWSIDE */
+		MX7D_PAD_LPSR_GPIO1_IO02__GPIO1_IO2		0x00	/* GPIO1_PULLUP */
+		MX7D_PAD_LPSR_GPIO1_IO03__GPIO1_IO3		0x00	/* GPIO1_IN */
+		MX7D_PAD_LPSR_GPIO1_IO04__GPIO1_IO4		0x00	/* GPIO2_HIGHSIDE */
+		MX7D_PAD_LPSR_GPIO1_IO05__GPIO1_IO5		0x00	/* GPIO2_LOWSIDE */
+		MX7D_PAD_LPSR_GPIO1_IO06__GPIO1_IO6		0x00	/* !USB_EXT_OC */
+		>;
+	};
+
+	pinctrl_usb_otg2_vbus_reg: usbotg2vbusreggrp {
+		fsl,pins = <
+		MX7D_PAD_LPSR_GPIO1_IO07__GPIO1_IO7		0x14	/* USB_EXT_PWR */
+		>;
+	};
+};
+
+&uart3 {
+	pinctrl-names = "default";
+	pinctrl-0 = <&pinctrl_uart3>;
+	assigned-clocks = <&clks IMX7D_UART3_ROOT_SRC>;
+	assigned-clock-parents = <&clks IMX7D_OSC_24M_CLK>;
+	uart-has-rtscts;
+	status = "okay";
+};
+
+&uart4 {
+	pinctrl-names = "default";
+	pinctrl-0 = <&pinctrl_uart4>;
+	rts-gpios = <&gpio4 8 GPIO_ACTIVE_HIGH>;
+	status = "okay";
+};
+
+&usbh {
+	status = "okay";
+	disable-over-current;
+};
+
+&usbotg1 {
+	dr_mode = "otg";
+	disable-over-current;
+	status = "okay";
+};
+
+&usbotg2 {
+	vbus-supply = <&reg_usb_otg2_vbus>;
+	dr_mode = "host";
+	disable-over-current;
+	status = "okay";
+};
+
+&usdhc2 {
+	pinctrl-names = "default";
+	pinctrl-0 = <&pinctrl_usdhc2>;
+	status = "okay";
+};
+
+&usdhc3 {
+	pinctrl-names = "default", "state_100mhz", "state_200mhz";
+	pinctrl-0 = <&pinctrl_usdhc3>;
+	pinctrl-1 = <&pinctrl_usdhc3_100mhz>;
+	pinctrl-2 = <&pinctrl_usdhc3_200mhz>;
+	assigned-clocks = <&clks IMX7D_USDHC3_ROOT_CLK>;
+	assigned-clock-rates = <400000000>;
+	bus-width = <8>;
+	fsl,tuning-step = <2>;
+	non-removable;
+	status = "okay";
+};
diff --git a/arch/arm/mach-imx/Kconfig b/arch/arm/mach-imx/Kconfig
index 072c65900834..607cef6ddf22 100644
--- a/arch/arm/mach-imx/Kconfig
+++ b/arch/arm/mach-imx/Kconfig
@@ -496,6 +496,10 @@ config MACH_PHYTEC_PHYCORE_IMX7
 	bool "Phytec phyCORE i.MX7"
 	select ARCH_IMX7
 
+config MACH_IOTMAXX_IMX7D_GW4100
+	bool "IoTMaxx i.MX7D MAXX GW4100 Gateway"
+	select ARCH_IMX7
+
 config MACH_FREESCALE_MX7_SABRESD
 	bool "NXP i.MX7 SabreSD Board"
 	select ARCH_IMX7
diff --git a/images/Makefile.imx b/images/Makefile.imx
index 765702f26deb..30c6a3e5c5d9 100644
--- a/images/Makefile.imx
+++ b/images/Makefile.imx
@@ -349,6 +349,11 @@ CFG_start_imx7d_sabresd.pblb.imximg = $(board)/freescale-mx7-sabresd/flash-heade
 FILE_barebox-freescale-mx7-sabresd.img = start_imx7d_sabresd.pblb.imximg
 image-$(CONFIG_MACH_FREESCALE_MX7_SABRESD) += barebox-freescale-mx7-sabresd.img
 
+pblb-$(CONFIG_MACH_IOTMAXX_IMX7D_GW4100) += start_imx7d_iotmaxx_gw4100
+CFG_start_imx7d_iotmaxx_gw4100.pblb.imximg = $(board)/iotmaxx-gw4100/flash-header-iotmaxx-imx7d-gw4100.imxcfg
+FILE_barebox-iotmaxx-imx7d-gw4100.img = start_imx7d_iotmaxx_gw4100.pblb.imximg
+image-$(CONFIG_MACH_IOTMAXX_IMX7D_GW4100) += barebox-iotmaxx-imx7d-gw4100.img
+
 pblb-$(CONFIG_MACH_PHYTEC_PHYCORE_IMX7) += start_phytec_phycore_imx7
 CFG_start_phytec_phycore_imx7.pblb.imximg = $(board)/phytec-phycore-imx7/flash-header-phytec-phycore-imx7.imxcfg
 FILE_barebox-phytec-phycore-imx7.img = start_phytec_phycore_imx7.pblb.imximg
