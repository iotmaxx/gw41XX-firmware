From: Ralf Glaser <glaser@iotmaxx.de>
Date: Wed, 25 Sep 2024 13:31:00 +0000
Subject: [PATCH] blspec-apply-overlays-from-global-environment

---
 common/blspec.c | 36 ++++++++++++++++++++++++++++++++++++
 1 file changed, 36 insertions(+)

diff --git a/common/blspec.c b/common/blspec.c
index 23a24c63db15..7b4b27fef2e6 100644
--- a/common/blspec.c
+++ b/common/blspec.c
@@ -62,6 +62,36 @@ static int blspec_overlay_fixup(struct device_node *root, void *ctx)
 	return 0;
 }
 
+static int blspec_env_overlay_fixup(struct device_node *root, void *ctx)
+{
+        struct blspec_entry *entry = ctx;
+        const char *overlays;
+        char *overlay;
+        char *sep, *freep;
+
+        overlays = getenv_nonempty("global.boot.overlays");
+
+        sep = freep = xstrdup(overlays);
+
+        while ((overlay = strsep(&sep, " "))) {
+                char *path;
+
+                if (!*overlay)
+                        continue;
+
+                path = basprintf("%s/%s", entry->rootpath, overlay);
+
+                of_overlay_apply_file(root, path, false);
+
+                free(path);
+        }
+
+        free(freep);
+
+        return 0;
+}
+
+
 /*
  * blspec_boot - boot an entry
  *
@@ -76,11 +106,14 @@ static int blspec_boot(struct bootentry *be, int verbose, int dryrun)
 	const char *abspath, *devicetree, *options, *initrd, *linuximage;
 	const char *overlays;
 	const char *appendroot;
+	const char *env_overlays = getenv_nonempty("global.boot.overlays");
 	char *old_fws, *fws;
 	struct bootm_data data = {
 		.dryrun = dryrun,
 	};
 
+	pr_info("DBG: overlays %s\n", env_overlays);
+
 	globalvar_set_match("linux.bootargs.dyn.", "");
 	globalvar_set("bootm.image", "");
 	globalvar_set("bootm.oftree", "");
@@ -117,6 +150,9 @@ static int blspec_boot(struct bootentry *be, int verbose, int dryrun)
 	if (overlays)
 		of_register_fixup(blspec_overlay_fixup, entry);
 
+        if (env_overlays)
+                of_register_fixup(blspec_env_overlay_fixup, entry);
+
 	if (initrd)
 		data.initrd_file = basprintf("%s/%s", abspath, initrd);
 
