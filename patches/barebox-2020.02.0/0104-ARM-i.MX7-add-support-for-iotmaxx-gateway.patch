From: Steffen Trumtrar <s.trumtrar@pengutronix.de>
Date: Thu, 16 Apr 2020 14:07:18 +0200
Subject: [PATCH] ARM: i.MX7: add support for iotmaxx gateway

Signed-off-by: Steffen Trumtrar <s.trumtrar@pengutronix.de>
---
 arch/arm/boards/Makefile                           |   1 +
 arch/arm/boards/iotmaxx-gateway/Makefile           |   2 +
 arch/arm/boards/iotmaxx-gateway/board.c            |  61 +++++
 .../flash-header-iotmaxx-imx7d-gateway.imxcfg      |   5 +
 arch/arm/boards/iotmaxx-gateway/lowlevel.c         |  45 ++++
 arch/arm/dts/Makefile                              |   1 +
 arch/arm/dts/imx7d-iotmaxx-gateway.dts             | 295 +++++++++++++++++++++
 arch/arm/mach-imx/Kconfig                          |   4 +
 drivers/clk/imx/clk-imx7.c                         |   2 +-
 images/Makefile.imx                                |   5 +
 10 files changed, 420 insertions(+), 1 deletion(-)
 create mode 100644 arch/arm/boards/iotmaxx-gateway/Makefile
 create mode 100644 arch/arm/boards/iotmaxx-gateway/board.c
 create mode 100644 arch/arm/boards/iotmaxx-gateway/flash-header-iotmaxx-imx7d-gateway.imxcfg
 create mode 100644 arch/arm/boards/iotmaxx-gateway/lowlevel.c
 create mode 100644 arch/arm/dts/imx7d-iotmaxx-gateway.dts

diff --git a/arch/arm/boards/Makefile b/arch/arm/boards/Makefile
index 6cb40d084b3d..04ad206b770a 100644
--- a/arch/arm/boards/Makefile
+++ b/arch/arm/boards/Makefile
@@ -61,6 +61,7 @@ obj-$(CONFIG_MACH_GUF_VINCELL)			+= guf-vincell/
 obj-$(CONFIG_MACH_GW_VENTANA)			+= gateworks-ventana/
 obj-$(CONFIG_MACH_HABA_KNX_LITE)		+= haba-knx/
 obj-$(CONFIG_MACH_HIGHBANK)			+= highbank/
+obj-$(CONFIG_MACH_IOTMAXX_IMX7D_GATEWAY)	+= iotmaxx-gateway/
 obj-$(CONFIG_MACH_IMX21ADS)			+= freescale-mx21-ads/
 obj-$(CONFIG_MACH_IMX233_OLINUXINO)		+= imx233-olinuxino/
 obj-$(CONFIG_MACH_IMX27ADS)			+= freescale-mx27-ads/
diff --git a/arch/arm/boards/iotmaxx-gateway/Makefile b/arch/arm/boards/iotmaxx-gateway/Makefile
new file mode 100644
index 000000000000..01c7a259e9a5
--- /dev/null
+++ b/arch/arm/boards/iotmaxx-gateway/Makefile
@@ -0,0 +1,2 @@
+obj-y += board.o
+lwl-y += lowlevel.o
diff --git a/arch/arm/boards/iotmaxx-gateway/board.c b/arch/arm/boards/iotmaxx-gateway/board.c
new file mode 100644
index 000000000000..b258e2dc6430
--- /dev/null
+++ b/arch/arm/boards/iotmaxx-gateway/board.c
@@ -0,0 +1,61 @@
+#include <bootsource.h>
+#include <common.h>
+#include <init.h>
+#include <io.h>
+#include <linux/micrel_phy.h>
+#include <linux/phy.h>
+#include <mach/bbu.h>
+#include <mach/imx7-regs.h>
+#include <mfd/imx7-iomuxc-gpr.h>
+
+#include <phy-id-list.h>
+
+static int ksz8081_phy_fixup(struct phy_device *dev)
+{
+	/* Set 50MHz-Clock mode */
+	phy_write(dev, 0x1f, BIT(7));
+
+	return 0;
+}
+
+static int imx7d_iotmaxx_gateway_dev_init(void)
+{
+        if (!of_machine_is_compatible("iotmaxx,imx7d-gateway"))
+		return 0;
+
+        barebox_set_hostname("iotmaxx-gateway");
+
+        imx7_bbu_internal_mmcboot_register_handler("eMMC", "/dev/mmc2",
+						   BBU_HANDLER_FLAG_DEFAULT);
+
+        return 0;
+}
+device_initcall(imx7d_iotmaxx_gateway_dev_init);
+
+static void imx7d_iotmaxx_gateway_init_fec(void)
+{
+	void __iomem *gpr = IOMEM(MX7_IOMUXC_GPR_BASE_ADDR);
+	uint32_t gpr1;
+
+	/*
+	 * Make sure we drive ENETn_TX_CLK signal
+	 */
+	gpr1 = readl(gpr + IOMUXC_GPR1);
+	gpr1 |=  IMX7D_GPR1_ENET2_CLK_DIR_MASK;
+        gpr1 &= ~IMX7D_GPR1_ENET2_TX_CLK_SEL_MASK;
+        writel(gpr1, gpr + IOMUXC_GPR1);
+}
+
+static int imx7d_iotmaxx_gateway_coredevices_init(void)
+{
+	if (!of_machine_is_compatible("iotmaxx,imx7d-gateway"))
+		return 0;
+
+	imx7d_iotmaxx_gateway_init_fec();
+
+	phy_register_fixup_for_uid(PHY_ID_KSZ8081, MICREL_PHY_ID_MASK,
+				   ksz8081_phy_fixup);
+
+        return 0;
+}
+coredevice_initcall(imx7d_iotmaxx_gateway_coredevices_init);
diff --git a/arch/arm/boards/iotmaxx-gateway/flash-header-iotmaxx-imx7d-gateway.imxcfg b/arch/arm/boards/iotmaxx-gateway/flash-header-iotmaxx-imx7d-gateway.imxcfg
new file mode 100644
index 000000000000..9d1d20310094
--- /dev/null
+++ b/arch/arm/boards/iotmaxx-gateway/flash-header-iotmaxx-imx7d-gateway.imxcfg
@@ -0,0 +1,5 @@
+soc imx7
+loadaddr 0x80000000
+dcdofs 0x400
+
+#include <mach/flash-header/imx7d-ddr-sabresd.imxcfg>
diff --git a/arch/arm/boards/iotmaxx-gateway/lowlevel.c b/arch/arm/boards/iotmaxx-gateway/lowlevel.c
new file mode 100644
index 000000000000..eb9f486e4fed
--- /dev/null
+++ b/arch/arm/boards/iotmaxx-gateway/lowlevel.c
@@ -0,0 +1,45 @@
+// SPDX-License-Identifier: GPL-2.0+
+#include <debug_ll.h>
+#include <io.h>
+#include <common.h>
+#include <linux/sizes.h>
+#include <mach/generic.h>
+#include <asm/barebox-arm-head.h>
+#include <asm/barebox-arm.h>
+#include <mach/imx7-ccm-regs.h>
+#include <mach/iomux-mx7.h>
+#include <mach/debug_ll.h>
+#include <asm/cache.h>
+#include <mach/esdctl.h>
+
+extern char __dtb_imx7d_iotmaxx_gateway_start[];
+
+static inline void setup_uart(void)
+{
+	void __iomem *iomux = IOMEM(MX7_IOMUXC_BASE_ADDR);
+	void __iomem *ccm = IOMEM(MX7_CCM_BASE_ADDR);
+
+	writel(CCM_CCGR_SETTINGn_NEEDED(0),
+	       ccm + CCM_CCGRn_CLR(CCM_CCGR_UART3));
+	writel(CCM_TARGET_ROOTn_ENABLE | UART2_CLK_ROOT__OSC_24M,
+	       ccm + CCM_TARGET_ROOTn(UART3_CLK_ROOT));
+	writel(CCM_CCGR_SETTINGn_NEEDED(0),
+	       ccm + CCM_CCGRn_SET(CCM_CCGR_UART3));
+
+	mx7_setup_pad(iomux, MX7D_PAD_UART3_TX_DATA__UART3_DCE_TX);
+
+	imx7_uart_setup_ll();
+
+	putc_ll('>');
+}
+
+ENTRY_FUNCTION(start_imx7d_iotmaxx_gateway, r0, r1, r2)
+{
+	imx7_cpu_lowlevel_init();
+
+	if (IS_ENABLED(CONFIG_DEBUG_LL))
+		setup_uart();
+
+	imx7d_barebox_entry(__dtb_imx7d_iotmaxx_gateway_start +
+			    get_runtime_offset());
+}
diff --git a/arch/arm/dts/Makefile b/arch/arm/dts/Makefile
index e8dca0b8513c..c748138c3496 100644
--- a/arch/arm/dts/Makefile
+++ b/arch/arm/dts/Makefile
@@ -30,6 +30,7 @@ lwl-dtb-$(CONFIG_MACH_GRINN_LITEBOARD) += imx6ul-liteboard.dtb.o
 lwl-dtb-$(CONFIG_MACH_GUF_SANTARO) += imx6q-guf-santaro.dtb.o
 lwl-dtb-$(CONFIG_MACH_GUF_VINCELL) += imx53-guf-vincell.dtb.o imx53-guf-vincell-lt.dtb.o
 lwl-dtb-$(CONFIG_MACH_GW_VENTANA) += imx6q-gw54xx.dtb.o
+lwl-dtb-$(CONFIG_MACH_IOTMAXX_IMX7D_GATEWAY) += imx7d-iotmaxx-gateway.dtb.o
 lwl-dtb-$(CONFIG_MACH_KONTRON_SAMX6I) += imx6q-samx6i.dtb.o \
 					imx6dl-samx6i.dtb.o
 lwl-dtb-$(CONFIG_MACH_LENOVO_IX4_300D) += armada-xp-lenovo-ix4-300d-bb.dtb.o
diff --git a/arch/arm/dts/imx7d-iotmaxx-gateway.dts b/arch/arm/dts/imx7d-iotmaxx-gateway.dts
new file mode 100644
index 000000000000..224e6a7917c3
--- /dev/null
+++ b/arch/arm/dts/imx7d-iotmaxx-gateway.dts
@@ -0,0 +1,295 @@
+/dts-v1/;
+
+#include <arm/imx7d.dtsi>
+
+// FIXME: delete when define is fixed in upstream
+#define MX7D_PAD_UART2_RX_DATA__ENET2_MDIO                        0x0130 0x03A0 0x0574 0x6 0x1
+
+/ {
+	model = "IoTMAXX i.MX7D Gateway";
+	compatible = "iotmaxx,imx7d-gateway", "fsl,imx7d";
+
+	chosen {
+		stdout-path = &uart3;
+
+		environment {
+			compatible = "barebox,environment";
+			device-path = &bareboxenv;
+		};
+	};
+
+	memory {
+		device_type = "memory";
+		reg = <0x80000000 0x40000000>;
+	};
+
+	reg_5v_periph: regulator-5v-periph {
+		compatible = "regulator-fixed";
+		regulator-name = "5v_periph";
+		regulator-min-microvolt = <5000000>;
+		regulator-max-microvolt = <5000000>;
+		gpio = <&gpio2 2 GPIO_ACTIVE_HIGH>;
+		enable-active-high;
+		regulator-boot-on;
+	};
+
+	reg_usb_otg2_vbus: regulator-usb-otg2-vbus {
+		compatible = "regulator-fixed";
+		regulator-name = "usb_otg2_vbus";
+		regulator-min-microvolt = <5000000>;
+		regulator-max-microvolt = <5000000>;
+		gpio = <&gpio1 7 GPIO_ACTIVE_HIGH>;
+		enable-active-high;
+	};
+};
+
+&fec1 {
+	status = "disabled";
+};
+
+&fec2 {
+	pinctrl-names = "default";
+	pinctrl-0 = <&pinctrl_enet2>,
+		    <&pinctrl_mdio>,
+		    <&pinctrl_rmii_phy_irq>;
+	assigned-clocks = <&clks IMX7D_ENET2_REF_ROOT_SRC>;
+	assigned-clock-parents = <&clks IMX7D_PLL_ENET_MAIN_50M_CLK>;
+	assigned-clock-rates = <50000000>;
+	phy-handle = <&ethphy1>;
+	phy-mode = "rmii";
+	phy-reset-gpios = <&gpio2 27 GPIO_ACTIVE_LOW>;
+	status = "okay";
+
+	mdio {
+		#address-cells = <1>;
+		#size-cells = <0>;
+
+		ethphy1: ethernet-phy@1 {
+			compatible = "ethernet-phy-ieee802.3-c22";
+			interrupt-parent = <&gpio2>;
+			interrupts = <25 IRQ_TYPE_LEVEL_LOW>;
+			reg = <1>;
+		};
+	};
+};
+
+&gpio1 {
+	pinctrl-names = "default";
+	pinctrl-0 = <&pinctrl_gpio1>;
+
+	gpio-line-names = "gpio1_highside",
+	"gpio1_lowside",
+	"gpio1_pullup",
+	"n_gpio1_in",
+	"gpio2_highside",
+	"gpio2_lowside",
+	"n_usb_ext_oc",
+	"usb_ext_pwr",
+	"", "",
+	"",
+	"",
+	"", "", "", "", "", "", "", "",
+	"", "", "", "", "", "", "", "",
+	"", "", "", "";
+};
+
+&gpio2 {
+	pinctrl-names = "default";
+	pinctrl-0 = <&pinctrl_gpio2>;
+	status = "okay";
+
+	gpio-line-names = "",
+	"",
+	"5v_periph_en",
+	"",
+	"",
+	"",
+	"",
+	"",
+	"", "",
+	"",
+	"",
+	"", "", "", "", "", "", "", "",
+	"", "", "", "", "", "", "", "",
+	"", "", "", "";
+};
+
+&iomuxc {
+	pinctrl_mdio: mdiogrp {
+		fsl,pins = <
+		MX7D_PAD_UART2_RX_DATA__ENET2_MDIO		0x3	/* ENET_MDIO */
+		MX7D_PAD_UART2_TX_DATA__ENET2_MDC		0x3  	/* ENET_MDC */
+		>;
+	};
+	pinctrl_enet2: enet1grp {
+		fsl,pins = <
+		MX7D_PAD_EPDC_SDCE0__ENET2_RGMII_RX_CTL		0x5	/* ENET2_CRS_DV */
+		MX7D_PAD_EPDC_SDCE1__ENET2_RX_ER		0x5	/* ENET2_RXER */
+		MX7D_PAD_EPDC_SDCE2__ENET2_RGMII_TD0		0x5	/* ENET2_TXD0 */
+		MX7D_PAD_EPDC_SDCE3__ENET2_RGMII_TD1		0x5	/* ENET2_TXD1 */
+		MX7D_PAD_EPDC_SDCLK__ENET2_RGMII_RD0		0x5	/* ENET2_RXD0 */
+		MX7D_PAD_EPDC_SDLE__ENET2_RGMII_RD1		0x5	/* ENET2_RXD1 */
+		MX7D_PAD_EPDC_GDCLK__GPIO2_IO24			0x5	/* ENET2_B-CAST_OFF */
+		MX7D_PAD_EPDC_GDRL__ENET2_RGMII_TX_CTL		0x5	/* ENET2_TXEN */
+		MX7D_PAD_EPDC_GDSP__GPIO2_IO27			0x59	/* !ENET2_RST */
+		MX7D_PAD_EPDC_BDR0__CCM_ENET_REF_CLK2		0x40000001	/* ENET2_TX_CLK */
+		>;
+	};
+	pinctrl_rmii_phy_irq: phygrp {
+		fsl,pins = <
+		MX7D_PAD_EPDC_GDOE__GPIO2_IO25			0x59	/* !ENET2_INT */
+		>;
+	};
+
+	pinctrl_gpio2: gpio2grp {
+		fsl,pins = <
+		MX7D_PAD_EPDC_DATA02__GPIO2_IO2			0x00	/* 5V_PERIPH_EN */
+		>;
+	};
+
+	pinctrl_uart3: uart3grp {
+		fsl,pins = <
+		MX7D_PAD_UART3_RX_DATA__UART3_DCE_RX		0x79
+		MX7D_PAD_UART3_TX_DATA__UART3_DCE_TX		0x79
+		MX7D_PAD_UART3_RTS_B__UART3_DCE_RTS		0x79
+		MX7D_PAD_UART3_CTS_B__UART3_DCE_CTS		0x79
+		>;
+	};
+
+	pinctrl_usdhc2: usdhc2grp {
+		fsl,pins = <
+		MX7D_PAD_SD2_CMD__SD2_CMD			0x59
+		MX7D_PAD_SD2_CLK__SD2_CLK			0x19
+		MX7D_PAD_SD2_DATA0__SD2_DATA0			0x59
+		MX7D_PAD_SD2_DATA1__SD2_DATA1			0x59
+		MX7D_PAD_SD2_DATA2__SD2_DATA2			0x59
+		MX7D_PAD_SD2_DATA3__SD2_DATA3			0x59
+		MX7D_PAD_SD2_CD_B__SD2_CD_B			0x59
+		>;
+	};
+
+	pinctrl_usdhc3: usdhc3grp {
+		fsl,pins = <
+		MX7D_PAD_SD3_CMD__SD3_CMD			0x59
+		MX7D_PAD_SD3_CLK__SD3_CLK			0x19
+		MX7D_PAD_SD3_DATA0__SD3_DATA0			0x59
+		MX7D_PAD_SD3_DATA1__SD3_DATA1			0x59
+		MX7D_PAD_SD3_DATA2__SD3_DATA2			0x59
+		MX7D_PAD_SD3_DATA3__SD3_DATA3			0x59
+		MX7D_PAD_SD3_DATA4__SD3_DATA4			0x59
+		MX7D_PAD_SD3_DATA5__SD3_DATA5			0x59
+		MX7D_PAD_SD3_DATA6__SD3_DATA6			0x59
+		MX7D_PAD_SD3_DATA7__SD3_DATA7			0x59
+		MX7D_PAD_SD3_STROBE__SD3_STROBE			0x19
+		>;
+	};
+
+	pinctrl_usdhc3_100mhz: usdhc3grp_100mhz {
+		fsl,pins = <
+		MX7D_PAD_SD3_CMD__SD3_CMD			0x5a
+		MX7D_PAD_SD3_CLK__SD3_CLK			0x1a
+		MX7D_PAD_SD3_DATA0__SD3_DATA0			0x5a
+		MX7D_PAD_SD3_DATA1__SD3_DATA1			0x5a
+		MX7D_PAD_SD3_DATA2__SD3_DATA2			0x5a
+		MX7D_PAD_SD3_DATA3__SD3_DATA3			0x5a
+		MX7D_PAD_SD3_DATA4__SD3_DATA4			0x5a
+		MX7D_PAD_SD3_DATA5__SD3_DATA5			0x5a
+		MX7D_PAD_SD3_DATA6__SD3_DATA6			0x5a
+		MX7D_PAD_SD3_DATA7__SD3_DATA7			0x5a
+		MX7D_PAD_SD3_STROBE__SD3_STROBE			0x1a
+		>;
+	};
+
+	pinctrl_usdhc3_200mhz: usdhc3grp_200mhz {
+		fsl,pins = <
+		MX7D_PAD_SD3_CMD__SD3_CMD			0x5b
+		MX7D_PAD_SD3_CLK__SD3_CLK			0x1b
+		MX7D_PAD_SD3_DATA0__SD3_DATA0			0x5b
+		MX7D_PAD_SD3_DATA1__SD3_DATA1			0x5b
+		MX7D_PAD_SD3_DATA2__SD3_DATA2			0x5b
+		MX7D_PAD_SD3_DATA3__SD3_DATA3			0x5b
+		MX7D_PAD_SD3_DATA4__SD3_DATA4			0x5b
+		MX7D_PAD_SD3_DATA5__SD3_DATA5			0x5b
+		MX7D_PAD_SD3_DATA6__SD3_DATA6			0x5b
+		MX7D_PAD_SD3_DATA7__SD3_DATA7			0x5b
+		MX7D_PAD_SD3_STROBE__SD3_STROBE			0x1b
+		>;
+	};
+};
+
+&iomuxc_lpsr {
+	pinctrl_gpio1: gpio1grp {
+		fsl,pins = <
+		MX7D_PAD_LPSR_GPIO1_IO00__GPIO1_IO0		0x00
+		MX7D_PAD_LPSR_GPIO1_IO01__GPIO1_IO1		0x00
+		MX7D_PAD_LPSR_GPIO1_IO02__GPIO1_IO2		0x00
+		MX7D_PAD_LPSR_GPIO1_IO03__GPIO1_IO3		0x00
+		MX7D_PAD_LPSR_GPIO1_IO04__GPIO1_IO4		0x00
+		MX7D_PAD_LPSR_GPIO1_IO05__GPIO1_IO5		0x00
+		MX7D_PAD_LPSR_GPIO1_IO06__GPIO1_IO6		0x00
+		MX7D_PAD_LPSR_GPIO1_IO07__GPIO1_IO7		0x00
+		>;
+	};
+};
+
+&uart3 {
+	pinctrl-names = "default";
+	pinctrl-0 = <&pinctrl_uart3>;
+	assigned-clocks = <&clks IMX7D_UART3_ROOT_SRC>;
+	assigned-clock-parents = <&clks IMX7D_OSC_24M_CLK>;
+	uart-has-rtscts;
+	status = "okay";
+};
+
+&usbotg1 {
+	dr_mode = "otg";
+	disable-over-current;
+	status = "okay";
+};
+
+&usbotg2 {
+	vbus-supply = <&reg_usb_otg2_vbus>;
+	dr_mode = "host";
+	disable-over-current;
+	status = "okay";
+};
+
+&usdhc2 {
+	pinctrl-names = "default";
+	pinctrl-0 = <&pinctrl_usdhc2>;
+	status = "okay";
+
+	partitions {
+		compatible = "fixed-partitions";
+		#address-cells = <1>;
+		#size-cells = <1>;
+
+		barebox@0 {
+			label = "barebox";
+			reg = <0x0 0xe0000>;
+		};
+
+		bareboxenv: bareboxenv@e0000 {
+			label = "bareboxenv";
+			reg = <0xe0000 0x20000>;
+		};
+
+		state_mmc: state@100000 {
+			label = "state";
+			reg = <0x100000 0x20000>;
+		};
+	};
+};
+
+&usdhc3 {
+	pinctrl-names = "default", "state_100mhz", "state_200mhz";
+	pinctrl-0 = <&pinctrl_usdhc3>;
+	pinctrl-1 = <&pinctrl_usdhc3_100mhz>;
+	pinctrl-2 = <&pinctrl_usdhc3_200mhz>;
+	assigned-clocks = <&clks IMX7D_USDHC3_ROOT_CLK>;
+	assigned-clock-rates = <400000000>;
+	bus-width = <8>;
+	fsl,tuning-step = <2>;
+	non-removable;
+	status = "okay";
+};
diff --git a/arch/arm/mach-imx/Kconfig b/arch/arm/mach-imx/Kconfig
index f5c8a4242b76..efe1e05afe35 100644
--- a/arch/arm/mach-imx/Kconfig
+++ b/arch/arm/mach-imx/Kconfig
@@ -486,6 +486,10 @@ config MACH_PHYTEC_PHYCORE_IMX7
 	bool "Phytec phyCORE i.MX7"
 	select ARCH_IMX7
 
+config MACH_IOTMAXX_IMX7D_GATEWAY
+	bool "IoTMaxx i.MX7D Gateway"
+	select ARCH_IMX7
+
 config MACH_FREESCALE_MX7_SABRESD
 	bool "NXP i.MX7 SabreSD Board"
 	select ARCH_IMX7
diff --git a/drivers/clk/imx/clk-imx7.c b/drivers/clk/imx/clk-imx7.c
index 545d0276f82a..50620d0b348d 100644
--- a/drivers/clk/imx/clk-imx7.c
+++ b/drivers/clk/imx/clk-imx7.c
@@ -836,7 +836,7 @@ static int imx7_clk_setup(void)
 	clk_set_parent(clks[IMX7D_ENET1_REF_ROOT_SRC], clks[IMX7D_PLL_ENET_MAIN_125M_CLK]);
 	clk_set_parent(clks[IMX7D_ENET1_TIME_ROOT_SRC], clks[IMX7D_PLL_ENET_MAIN_100M_CLK]);
 	clk_set_parent(clks[IMX7D_ENET2_REF_ROOT_SRC], clks[IMX7D_PLL_ENET_MAIN_50M_CLK]);
-	clk_set_parent(clks[IMX7D_ENET2_TIME_ROOT_SRC], clks[IMX7D_PLL_ENET_MAIN_100M_CLK]);
+        clk_set_parent(clks[IMX7D_ENET2_TIME_ROOT_SRC], clks[IMX7D_PLL_ENET_MAIN_100M_CLK]);
 
 	clk_set_rate(clks[IMX7D_PLL_SYS_PFD4_CLK], 392000000);
 	clk_set_parent(clks[IMX7D_ENET_AXI_ROOT_SRC], clks[IMX7D_PLL_SYS_PFD4_CLK]);
diff --git a/images/Makefile.imx b/images/Makefile.imx
index 994fd951a071..aa5630ca7801 100644
--- a/images/Makefile.imx
+++ b/images/Makefile.imx
@@ -347,6 +347,11 @@ CFG_start_imx7d_sabresd.pblb.imximg = $(board)/freescale-mx7-sabresd/flash-heade
 FILE_barebox-freescale-mx7-sabresd.img = start_imx7d_sabresd.pblb.imximg
 image-$(CONFIG_MACH_FREESCALE_MX7_SABRESD) += barebox-freescale-mx7-sabresd.img
 
+pblb-$(CONFIG_MACH_IOTMAXX_IMX7D_GATEWAY) += start_imx7d_iotmaxx_gateway
+CFG_start_imx7d_iotmaxx_gateway.pblb.imximg = $(board)/iotmaxx-gateway/flash-header-iotmaxx-imx7d-gateway.imxcfg
+FILE_barebox-iotmaxx-imx7d-gateway.img = start_imx7d_iotmaxx_gateway.pblb.imximg
+image-$(CONFIG_MACH_IOTMAXX_IMX7D_GATEWAY) += barebox-iotmaxx-imx7d-gateway.img
+
 pblb-$(CONFIG_MACH_PHYTEC_PHYCORE_IMX7) += start_phytec_phycore_imx7
 CFG_start_phytec_phycore_imx7.pblb.imximg = $(board)/phytec-phycore-imx7/flash-header-phytec-phycore-imx7.imxcfg
 FILE_barebox-phytec-phycore-imx7.img = start_phytec_phycore_imx7.pblb.imximg
